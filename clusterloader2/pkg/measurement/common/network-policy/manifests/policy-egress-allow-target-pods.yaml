{{ if eq .NetworkPolicy_Type "cnp" }}
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: {{.Name}}
  namespace: {{.ClientNamespace}} # since this policy is egress, the namespace is the client namespace
  labels:
    type: {{.TypeLabelValue}}
spec:
  endpointSelector:
    matchLabels:
      type: {{.TypeLabelValue}}
  egress:
  - toEndpoints:
    - matchLabels:
        net-pol-test: {{.TargetLabelValue}}
{{if .OnlyTargetNamespace}}
        k8s:io.kubernetes.pod.namespace: {{.TargetNamespace}}
{{end}}
{{if .L7Enabled}}
    toPorts:
    - ports:
      - port: "{{.TargetPort}}"
        protocol: TCP
      rules:
        http:
        - method: GET
          path: /
{{end}}
{{else if .NetworkPolicy_Type "ccnp" }}
apiVersion: cilium.io/v2
kind: CiliumClusterwideNetworkPolicy
metadata:
  name: {{.Name}}
  labels:
    type: {{.TypeLabelValue}}
spec:
  endpointSelector:
    matchLabels:
      type: {{.TypeLabelValue}}
  egress:
  - toEndpoints:
    - matchLabels:
        net-pol-test: {{.TargetLabelValue}}
{{if .OnlyTargetNamespace}}
        k8s:io.kubernetes.pod.namespace: {{.TargetNamespace}}
{{end}}
{{if .L7Enabled}}
    toPorts:
    - ports:
      - port: "{{.TargetPort}}"
        protocol: TCP
      rules:
        http:
        - method: GET
          path: /
{{end}}
{{else}}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{.Name}}
  namespace: {{.Namespace}}
  labels:
    type: {{.TypeLabelValue}}
spec:
  podSelector:
    matchLabels:
      type: {{.TypeLabelValue}}
  policyTypes:
  - Egress
  egress:
  - to:
    - podSelector:
        matchLabels:
          net-pol-test: {{.TargetLabelValue}}
{{if .OnlyTargetNamespace}}
      namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: {{.TargetNamespace}}
{{else}}
      namespaceSelector: {}
{{end}}
{{end}}